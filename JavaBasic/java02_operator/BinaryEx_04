package java02_operator;

public class BinaryEx_04 {

	public static void main(String[] args) {
		
		// 이항 연산자 - 논리
		// && || !
		// ( ! 연산자는 단항 연산자)
		
		// && : AND	- 두 개의 항이 모두 true 일 때 true 리턴
		// || : OR	- 둘 중의 하나의 항이라도 true 이면 true 리턴
		// ! : NOT	- 부정, true 는 false 로 false 는 true 로 변환
		// boolean형의 관계를 따진다
		
		// true && false
		// false || false
		
		// cf) XOR 왼쪽과 오른쪽이 같으면 참 다르면 거짓 - 컴퓨터에서 많이 쓰이지만 프로그래밍에는 없음(?)
		
		
		//--------------------------------------
		
		boolean b1 = true;
		boolean b2 = false;
		
		System.out.println("true&&false : " + (b1&&b2));
		System.out.println("true||false : " + (b1||b2));
		System.out.println("!false : " + !b2);
		
		System.out.println("----------------");
		
		int num = 88;
		
//		System.out.println( (num>=1) && (num<=100) );
//		System.out.println( (88>=1) && (88<=100) );
//		System.out.println( true && (num<=100) );
//		System.out.println( true && true) ;
//		System.out.println( true );
		// num 변수가 1보다 크거나 같으면서 100보다 작거나 같은가?
		// num 변수가 1~100사이의 숫자인가?
		
		System.out.println("-----------------");
		
//		System.out.println( 1 <= num <= 100);
		// 에러!
//		System.out.println( 1 <= 88 <= 100);
//		System.out.println( true <= 100); // boolean <= int
		// <= 연산자는 boolean, int형을 연산할 수 없다.
		
		
		
		System.out.println("-----------------");
		
		System.out.println( !((num>=1) && (num<=100)) );
//		System.out.println( !((88>=1) && (88<=100)) );
//		System.out.println( !(true && (88<=100)) );
//		System.out.println( !(true && true) );
//		System.out.println( !true );
//		System.out.println( false );
		
		System.out.println("-----------------");
		
//		System.out.println( !((num>=1) && (num<=100)) );
//		System.out.println( !(num>=1) !&& !(num<=100) );
//		System.out.println( (num<1) !&& (num>100) ); // and 와 !가 만나면 or, or 는 and 로
		System.out.println( (num<1) || (num>100) ); 
		
		
		}
}
