package java06_class.constructor;

import java.util.Scanner;

class Constructor{// 기능클래스
	
	private int num1;
	private int num2 = 20;// 객체가 생성될 때 20으로 초기화하라 -> 이런식의 초기화를 생성자가 하는 것
		
	//매개변수가 없는 생성자 - 디폴트 생성자 //객체가 만들어지자마자 값을 대입
	public Constructor() {
		System.out.println("디폴트 생성자 호출됨");
		
		System.out.println(num1);
		System.out.println(num2);
		
		num1 = 500;
		num2 = 600;
		
		System.out.println("-----");
		System.out.println(num1);
		System.out.println(num2);
		
	}
	
	//매개변수가 있는 생성자
	public Constructor(int num1, int num2) {//오버로딩 //멤버필드에 초기화해줄 값을 넣기 때문에 같은 이름//첫글자 대문자
		
		System.out.println("매개변수 있는 생성자 호출됨");
		
//		this.num1 = num1;
//		this.num2 = num2;
		
		setNum1(num1);
		setNum2(num2);
	}//setter와 같은 코드
	
	
	//일반 메소드 - 생성자와 헷갈리니까 절대 이름 같게 만들지 말 것
//	public void Constructor() {
//		
//	}

	public int getNum1() {
		return num1;
	}

	public void setNum1(int num1) {
		this.num1 = num1;
	}

	public int getNum2() {
		return num2;
	}

	public void setNum2(int num2) {
		this.num2 = num2;
	}
}


public class ConstructorEx_01 {// 실행클래스
	public static void main(String[] args) {
		
		Constructor cons = new Constructor();//디폴트 생성자를 컴파일러가 자동으로 생성 //메소드와 동일한 방법으로 호출
		
		Constructor cons02 = new Constructor(111, 222);
		
		System.out.println("cons : " + cons.getNum1() + ", " + cons.getNum2());//0, 20
		
		System.out.println("cons02 : " + cons02.getNum1() + ", " + cons02.getNum2());//111,222
		
		
		Scanner sc = new Scanner(System.in); //이것도 생성자
		
		
	}

}
